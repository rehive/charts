image:
  repository: eu.gcr.io/rehive-services/spilo-11
  tag: 1.6.1
  pullPolicy: IfNotPresent
  init:
    command:
      - '/bin/sh'
    args:
      - '/launch.sh'
      - init


# How many postgres containers to spawn
replicas: 3
debug: false

podAntiAffinity: soft

nodeSelector: {}
#  cloud.google.com/gke-nodepool: postgres-pool

tolerations: {}
#  - key: "dedicated"
#    operator: "Equal"
#    value: "postgres"
#    effect: "NoSchedule"


# Resource requests and limits per pod
resources: {}
#  limits:
#     cpu: 2
#     memory: 7.5Gi
#  requests:
#     cpu: 2
#     memory: 7.5Gi

useConfigMaps: false

postgresParameters:
  bin_dir: /usr/lib/postgresql/9.6/bin
  # pg_hba:
  #   - local   all             all                                   trust
  #   - hostssl all             +zalandos    127.0.0.1/32       pam
  #   - host    all             all                127.0.0.1/32       md5
  #   - hostssl all             +zalandos    ::1/128            pam
  #   - host    all             all                ::1/128            md5
  #   - hostssl replication     standby all                md5
  #   - hostnossl all           all                all                reject
  #   - hostssl all             +zalandos    all                pam
  #   - hostssl all             all                all                md5

# To modify the bootstrap parameters
bootstrapParameters:
  dcs:
    ttl: 70
    loop_wait: 10
    retry_timeout: 30

walE:
  enabled: false
  envDir: /home/postgres/etc/wal-e.d/env
  scheduleCronJob: 00 01 * * *
  retainBackups: 2
  s3Bucket:
  gcsBucket: # the bucket name created with rdeploy create_bucket
  gcloudCredentials: "gcloud-wale.json"
  backupThresholdMegabytes: 1024
  backupThresholdPercentage: 30

gcloudCredentials:
  enabled: false
  secretName: "gcloud-wale"

cloneWithWale:
  enabled: false
  cloneWalGcsBucket: ""
  cloneScope: ""
  cloneTargetTime: ""
  gcloudCredentials: "gcloud-wale.json"

persistentVolume:
  enabled: true
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  accessModes:
    - ReadWriteOnce
  size: 1Gi
  annotations: {}

cleanup:
  image:
    pullPolicy: IfNotPresent
    repository: gcr.io/google-containers/hyperkube
    tag: v1.13.7

## Create RBAC policy for patroni
rbac:
  create: true
# Create ServiceAccount for patroni
serviceAccount:
  create: true
  name:
