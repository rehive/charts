apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "zergling.fullname" . }}
  labels:
    {{ include "zergling.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "zergling.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "zergling.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: webapp
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: {{ .Values.webapp.command }}
          args: {{ .Values.webapp.args }}
          env:

          {{- if .Values.postgres.enabled }}
            - name: POSTGRES_HOST
              value: "{{ .Values.postgres.host }}"
            - name: POSTGRES_PORT
              value: "{{ .Values.postgres.port }}"
            - name: POSTGRES_USER
              value: "{{ .Values.postgres.user }}"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.postgres.secret.name}}"
                  key: "{{ .Values.postgres.secret.key}}"
          {{- end }}

          {{- if .Values.rabbitmq.enabled }}
            - name: RABBITMQ_HOST
              value: "{{ .Values.rabbitmq.host }}"
            - name: RABBITMQ_PORT
              value: "{{ .Values.rabbitmq.port }}"
            - name: RABBITMQ_USER
              value: "{{ .Values.rabbitmq.user }}"
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.rabbitmq.secret.name}}"
                  key: "{{ .Values.rabbitmq.secret.key}}"
          {{- end }}

          {{- if .Values.envFromSecret.enabled }}
          envFrom:
            - secretRef:
                name: {{ .Values.envFromSecret.name | default (include "zergling.name" .) }}
          {{- end }}

          ports:
            - name: {{ .Values.service.name }}
              containerPort: {{ .Values.service.internalPort }}
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 5
            periodSeconds: 10
            httpGet:
              path: /healthz
              port: {{ .Values.service.internalPort }}
          readinessProbe:
            initialDelaySeconds: 5
            periodSeconds: 10
            httpGet:
              path: /readiness
              port: {{ .Values.service.internalPort }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

---
