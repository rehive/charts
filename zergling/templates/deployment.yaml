apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "zergling.fullname" . }}
  labels:
    {{ include "zergling.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "zergling.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "zergling.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: webapp
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: {{ .Values.webapp.command }}
          args: {{ .Values.webapp.args }}
          env:
          {{- if .Values.postgres.enabled }}
            - name: POSTGRES_HOST
              value: "{{ .Values.postgres.host }}"
            - name: POSTGRES_PORT
              value: "{{ .Values.postgres.port }}"
            - name: POSTGRES_USER
              value: "{{ .Values.postgres.user }}"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.postgres.secret.name}}"
                  key: "{{ .Values.postgres.secret.key}}"
          {{- end }}
          {{- if .Values.envFromSecret.enabled }}
          envFrom:
            - secretRef:
                name: {{ .Values.envFromSecret.name | default (include "zergling.name" .) }}
          {{- end }}
          ports:
            - name: {{ .Values.service.name }}
              containerPort: {{ .Values.service.internalPort }}
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 5
            periodSeconds: 10
            httpGet:
              path: /healthz
              port: {{ .Values.service.internalPort }}
          readinessProbe:
            initialDelaySeconds: 5
            periodSeconds: 10
            httpGet:
              path: /readiness
              port: {{ .Values.service.internalPort }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.continuousDeployments.enabled }}
          {{- range $repository := .Values.continuousDeployments.repositories }}
          volumeMounts:
            - name: {{ $repository.name }}-src
              mountPath: /rehive/opt/{{ $repository.name }}
              readOnly: false # To write build logs
          {{- end }}
          {{- end }}
        {{- if .Values.continuousDeployments.enabled }}
        {{- $resources := .Values.continuousDeployments.resources }}
        {{- range $repository := .Values.continuousDeployments.repositories }}
        - name: {{ $repository.name }}
          image: {{ $repository.image }}:{{ $repository.tag }}
          imagePullPolicy: Always
          env:
            - name: REHIVE_REPOSITORY
              value: {{ $repository.user }}/{{ $repository.name }}
          resources:
            {{- toYaml $resources | nindent 12 }}
          volumeMounts:
            - name: {{ $repository.name }}-src
              mountPath: /zergling/src
              readOnly: false
            - name: {{ $repository.name }}-ssh-key
              mountPath: /zergling/.ssh/github.com/
              readOnly: false
        {{- end }}
        {{- end }}
      securityContext:
        fsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
      {{- if .Values.continuousDeployments.enabled }}
      {{- range $repository := .Values.continuousDeployments.repositories }}
      volumes:
        - name: {{ $repository.name }}-src
          emptyDir: {}
        - name: {{ $repository.name }}-ssh-key
          secret:
            secretName: {{ $repository.name }}-ssh
            defaultMode: 438
            items:
              - key: private-key
                mode: 384
                path: deploy/id_rsa
      {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
{{- if .Values.management.enabled }}
apiVersion: v1
kind: Pod
metadata:
  name: {{ include "zergling.fullname" . }}-management
  labels:
    {{ include "zergling.labels" . | nindent 4 }}
spec:
  restartPolicy: OnFailure
  containers:
  - name: management
    image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
    imagePullPolicy: {{ .Values.image.pullPolicy }}
    command:
      - /bin/sh
      - -c
      - |
        set -x;
        python manage.py makemigrations zergling;
        python manage.py migrate zergling;
    env:
    {{- if .Values.postgres.enabled }}
      - name: POSTGRES_HOST
        value: "{{ .Values.postgres.host }}"
      - name: POSTGRES_PORT
        value: "{{ .Values.postgres.port }}"
      - name: POSTGRES_USER
        value: "{{ .Values.postgres.user }}"
      - name: POSTGRES_PASSWORD
        valueFrom:
          secretKeyRef:
            name: "{{ .Values.postgres.secret.name}}"
            key: "{{ .Values.postgres.secret.key}}"
    {{- end }}
    {{- if .Values.envFromSecret.enabled }}
    envFrom:
      - secretRef:
          name: {{ .Values.envFromSecret.name | default (include "zergling.name" .) }}
    {{- end }}
    resources:
      requests:
        memory: 1G
        cpu: 266m
      limits:
        memory: 1G
        cpu: 266m
{{- end }}
