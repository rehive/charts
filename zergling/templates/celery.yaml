{{ $labels := include "zergling.labels" . }}
{{ $chartName := include "zergling.name" . }}
{{ $releaseName := .Release.Name }}
{{ $repository := .Values.image.repository }}
{{ $tag := .Values.image.tag }}
{{ $pullPolicy := .Values.image.pullPolicy }}
{{ $postgres := .Values.postgres }}
{{ $rabbitmq := .Values.rabbitmq }}
{{ $envFromSecret := .Values.envFromSecret }}
{{ $service := .Values.service }}
{{ $nodeSelector := .Values.nodeSelector }}
{{ $affinity := .Values.affinity }}
{{ $tolerations := .Values.tolerations }}


{{- if .Values.celery.enabled }}
{{- range $worker := .Values.celery.workers }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $worker.name }}
  labels:
    {{ $labels | nindent 4 }}
spec:
  replicas: {{ $worker.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ $chartName }}
      app.kubernetes.io/instance: {{ $releaseName }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ $chartName }}
        app.kubernetes.io/instance: {{ $releaseName }}
        {{ $labels | nindent 8 }}
        django-component: celery-worker
    spec:
      containers:
        - name: {{ $worker.name }}
          image: {{ $repository }}:{{ $tag }}
          imagePullPolicy: {{ $pullPolicy }}
          command:
            - celery
            - worker
          args:
            {{- range $key, $value := $worker.args }}
            {{- if $value }}
            - --{{ $key }}={{ $value }}
            {{- else }}
            - --{{ $key }}
            {{- end }}
            {{- end }}
          env:

          {{- if $postgres.enabled }}
            - name: POSTGRES_HOST
              value: "{{ $postgres.host }}"
            - name: POSTGRES_PORT
              value: "{{ $postgres.port }}"
            - name: POSTGRES_USER
              value: "{{ $postgres.user }}"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ $postgres.secret.name }}"
                  key: "{{ $postgres.secret.key }}"
          {{- end }}

          {{- if $rabbitmq.enabled }}
            - name: RABBITMQ_HOST
              value: "{{ $rabbitmq.host }}"
            - name: RABBITMQ_PORT
              value: "{{ $rabbitmq.port }}"
            - name: RABBITMQ_USER
              value: "{{ $rabbitmq.user }}"
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ $rabbitmq.secret.name }}"
                  key: "{{ $rabbitmq.secret.key }}"
          {{- end }}

          {{- if $envFromSecret.enabled }}
          envFrom:
            - secretRef:
                name: {{ $envFromSecret.name | default ($chartName) }}
          {{- end }}

          ports:
            - name: {{ $service.name }}
              containerPort: {{ $worker.internalPort }}
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 5
            periodSeconds: 10
            httpGet:
              path: /healthz
              port: {{ $worker.internalPort }}
          readinessProbe:
            initialDelaySeconds: 5
            periodSeconds: 10
            httpGet:
              path: /readiness
              port: {{ $worker.internalPort }}
          resources:
            {{- toYaml $worker.resources | nindent 12 }}

      {{- with $nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

---
{{- end }}
{{- end}}
