{{- if .Values.management.enabled }}
apiVersion: v1
kind: Pod
metadata:
  name: "{{ template "rehive-service.fullname" . }}-management"
  labels:
    {{ include "rehive-service.labels" . | nindent 4 }}
    app.kubernetes.io/name: app.kubernetes.io/name: {{ include "rehive-service.fullname" . }}
    app.kubernetes.io/component: server-manager
  annotations:
    helm/revision: "{{ .Release.Revision }}" # Hack to force restart on upgrade
spec:
  containers:
  - name: management
    image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
    imagePullPolicy: {{ .Values.image.pullPolicy }}
    command: ['/bin/sh','-c', 'python manage.py runserver'] # Hack to create long-running pod
    env:
    {{- if .Values.postgres.enabled }}
      - name: POSTGRES_HOST
        value: "{{ .Values.postgres.host}}"
      - name: POSTGRES_PORT
        value: "{{ .Values.postgres.port}}"
      - name: POSTGRES_USER
        value: "{{ .Values.postgres.user }}"
      - name: POSTGRES_PASSWORD
        valueFrom:
          secretKeyRef:
            name: "{{ .Values.postgres.secret.name}}"
            key: "{{ .Values.postgres.secret.key}}"
    {{- end }}
    {{- if .Values.redis.enabled }}
      - name: REDIS_HOST
        value: "{{ .Values.redis.host}}"
      - name: REDIS_PORT
        value: "{{ .Values.redis.port}}"
      - name: REDIS_PASSWORD
        valueFrom:
          secretKeyRef:
            name: "{{ .Values.redis.secret.name}}"
            key: "{{ .Values.redis.secret.key}}"
    {{- end }}
    {{- if .Values.rabbitmq.enabled }}
      - name: RABBITMQ_HOST
        value: "{{ .Values.rabbitmq.host}}"
      - name: RABBITMQ_PORT
        value: "{{ .Values.rabbitmq.port}}"
      - name: RABBITMQ_PASSWORD
        valueFrom:
          secretKeyRef:
            name: "{{ .Values.rabbitmq.secret.name}}"
            key: "{{ .Values.rabbitmq.secret.key}}"
    {{- end }}
    {{- if .Values.envFromSecret.enabled }}
    envFrom:
      - secretRef:
          name: {{ .Values.envFromSecret.secretName | default (include "rehive-service.fullname" .) }}
    {{- end }}
    resources:
      {{ toYaml .Values.management.resources | nindent 10 }}
    {{- if .Values.gcloudCredentials.enabled }}
    volumeMounts:
      - name: {{ .Values.gcloudCredentials.kubernetesSecret }}
        mountPath: /etc/credentials
        readOnly: true
    {{- end }}
  {{- if .Values.gcloudCredentials.enabled }}
  volumes:
    - name: {{ .Values.gcloudCredentials.kubernetesSecret }}
      secret:
        secretName: {{ .Values.gcloudCredentials.kubernetesSecret }}
  {{- end }}
{{- end }}
