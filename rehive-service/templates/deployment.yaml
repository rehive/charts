apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
spec:
  replicas: {{ .Values.deployment.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      annotations:
        helm/revision: "{{ .Release.Revision }}" # Hack to force restart on upgrade
      labels:
        app: webapp
    spec:
      containers:
      - name: webapp
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.service.internalPort }}
        command: ['/bin/sh','-c', 'gunicorn config.wsgi:application --config file:config/gunicorn.py']
        envFrom:
          - secretRef:
              name: {{ template "fullname" . }}
        env:
        {{- if .Values.postgres.enabled }}
          - name: POSTGRES_HOST
            value: {{ .Values.postgres.host}}
          - name: POSTGRES_PORT
            value: {{ .Values.postgres.port}}
          - name: POSTGRES_USER
            value: {{ .Values.postgres.user }}
          - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.secret.name}}
                  key: {{ .Values.postgres.secret.key}}
        {{- end }}
        {{- if .Values.redis.enabled }}
          - name: REDIS_HOST
            value: {{ .Values.redis.host}}
          - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.redis.secret.name}}
                  key: {{ .Values.redis.secret.key}}
        {{- end }}
        livenessProbe:
          httpGet:
            path: /readiness
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: 10
          timeoutSeconds: 2
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: 10
          timeoutSeconds: 2
          periodSeconds: 10
        resources:
{{ toYaml .Values.deployment.resources | indent 10 }}
---
apiVersion: v1
kind: Pod
metadata:
  name: "{{ template "fullname" . }}-management"
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
  annotations:
    helm/revision: "{{ .Release.Revision }}" # Hack to force restart on upgrade
spec:
  containers:
  - name: management
    image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
    imagePullPolicy: {{ .Values.image.pullPolicy }}
    command: ['/bin/sh','-c', 'python manage.py runserver'] # Hack to create long-running pod
    envFrom:
      - secretRef:
          name: {{ template "fullname" . }}
    resources:
      requests:
        memory: 512Mi
        cpu: 200m
      limits:
        memory: 512Mi
        cpu: 200m
