apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ include "rehive-service.fullname" . }}
  labels:
    {{ include "rehive-service.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.deployment.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "rehive-service.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      annotations:
        helm/revision: "{{ .Release.Revision }}" # Hack to force restart on upgrade
      labels:
        app.kubernetes.io/name: {{ include "rehive-service.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
      - name: webapp
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.service.internalPort }}
        command: {{ .Values.deployment.command }}
        env:
        {{- if .Values.gcloudCredentials.enabled }}
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: "/etc/credentials/{{ .Values.gcloudCredentials.kubernetesSecret }}.json"
        {{- end }}
        {{- if .Values.postgres.enabled }}
          - name: POSTGRES_HOST
            value: "{{ .Values.postgres.host}}"
          - name: POSTGRES_PORT
            value: "{{ .Values.postgres.port}}"
          - name: POSTGRES_USER
            value: "{{ .Values.postgres.user }}"
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.postgres.secret.name}}"
                key: "{{ .Values.postgres.secret.key}}"
        {{- end }}
        {{- if .Values.redis.enabled }}
          - name: REDIS_HOST
            value: "{{ .Values.redis.host}}"
          - name: REDIS_PORT
            value: "{{ .Values.redis.port}}"
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.redis.secret.name}}"
                key: "{{ .Values.redis.secret.key}}"
        {{- end }}
        {{- if .Values.rabbitmq.enabled }}
          - name: RABBITMQ_HOST
            value: "{{ .Values.rabbitmq.host}}"
          - name: RABBITMQ_PORT
            value: "{{ .Values.rabbitmq.port}}"
          - name: RABBITMQ_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.rabbitmq.secret.name}}"
                key: "{{ .Values.rabbitmq.secret.key}}"
        {{- end }}
        {{- if .Values.envFromSecret.enabled }}
        envFrom:
          - secretRef:
              name: {{ .Values.envFromSecret.secretName | default (include "rehive-service.fullname" .) }}
        {{- end }}
        {{- with .Values.service.livenessProbe }}
        livenessProbe:
          {{ toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.service.readinessProbe }}
        readinessProbe:
          {{ toYaml . | nindent 10 }}
        {{- end}}
        resources:
          {{ toYaml .Values.deployment.resources | nindent 10 }}
        {{- if .Values.gcloudCredentials.enabled }}
        volumeMounts:
          - name: {{ .Values.gcloudCredentials.kubernetesSecret }}
            mountPath: /etc/credentials
            readOnly: true
        {{- end }}
      {{- if .Values.gcloudCredentials.enabled }}
      volumes:
        - name: {{ .Values.gcloudCredentials.kubernetesSecret }}
          secret:
            secretName: {{ .Values.gcloudCredentials.kubernetesSecret }}
      {{- end }}