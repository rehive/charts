{{ $chartName := include "rehive-service.name" . }}
{{ $labels := include "rehive-service.labels" . }}
{{ $plugins := include "rehive-service.plugins" . }}
{{ $serviceName := include "rehive-service.fullname" . }}
{{ $gcloudCredentials := .Values.gcloudCredentials }}
{{ $releaseName := .Release.Name }}
{{ $repository := .Values.image.repository }}
{{ $revision := .Release.Revision }}
{{ $tag := .Values.image.tag }}
{{ $vendorName := .Values.vendor.name }}

{{- if .Values.workers.enabled -}}
{{- range $worker := .Values.workers.deployments -}}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ $worker.name }}
  labels:
    {{ $labels | nindent 4 }}
    app.kubernetes.io/name: {{ $chartName }}
    app.kubernetes.io/component: celery-worker
spec:
  replicas: {{ $worker.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ $chartName }}
      app.kubernetes.io/component: celery-worker
      app: {{ $worker.name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 2
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ $chartName }}
        app.kubernetes.io/component: celery-worker
        app: {{ $worker.name }}
      annotations:
        helm/revision: "{{ $revision }}" # Hack to force restart on upgrade
    spec:
      containers:
      - name: {{ $worker.name }}
        image: {{ $repository }}:{{ $tag }}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: {{ $worker.internalPort }}
        command:
          {{- toYaml $worker.command | nindent 12 }}
        args:
          {{- range $key, $value := $worker.args }}
          {{- if $value }}
          - --{{ $key }}={{ $value }}
          {{- else }}
          - --{{ $key }}
          {{- end }}
          {{- end }}
        env:
        {{- if $gcloudCredentials.enabled }}
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: "/etc/credentials/{{ $gcloudCredentials.kubernetesSecret }}.json"
        {{- end }}
          {{ $plugins | nindent 10 }}
        envFrom:
          - secretRef:
              name: {{ $serviceName }}
        resources:
          {{ toYaml $worker.resources | nindent 10 }}
        {{- if $gcloudCredentials.enabled }}
        volumeMounts:
          - name: {{ $gcloudCredentials.kubernetesSecret }}
            mountPath: /etc/credentials
            readOnly: true
        {{- end }}
      {{- if (eq "azure" $vendorName) }}
      dnsConfig:
        options:
          - name: single-request-reopen
      {{- end }}
      {{- if $gcloudCredentials.enabled }}
      volumes:
        - name: {{ $gcloudCredentials.kubernetesSecret }}
          secret:
            secretName: {{ $gcloudCredentials.kubernetesSecret }}
      {{- end }}
---
{{- end -}}
{{- end -}}
