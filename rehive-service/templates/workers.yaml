{{- $replicaCount := .Values.deployment.replicaCount -}}
{{- $repository := .Values.image.repository -}}
{{- $tag := .Values.image.tag -}}
{{- $serviceName := include "fullname" . -}}
{{- $revision := .Release.Revision -}}

{{- if .Values.workersEnabled -}}
{{- range $worker := .Values.workers }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ $worker.name }}
spec:
  replicas: {{ $worker.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 2
  template:
    metadata:
      labels:
        app: {{ $worker.name }}
      annotations:
        helm/revision: "{{ $revision }}" # Hack to force restart on upgrade
    spec:
      containers:
      - name: {{ $worker.name }}
        image: "{{ $repository }}:{{ $tag }}"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: {{ $worker.internalPort }}
        command: ['/bin/sh','-c', '{{ $worker.command }}']
        env:
        {{- if .Values.postgres.enabled }}
          - name: POSTGRES_HOST
            value: "{{ .Values.postgres.host}}"
          - name: POSTGRES_PORT
            value: "{{ .Values.postgres.port}}"
          - name: POSTGRES_USER
            value: "{{ .Values.postgres.user }}"
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.postgres.secret.name}}"
                key: "{{ .Values.postgres.secret.key}}"
        {{- end }}
        {{- if .Values.redis.enabled }}
          - name: REDIS_HOST
            value: "{{ .Values.redis.host}}"
          - name: REDIS_PORT
            value: "{{ .Values.redis.port}}"
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.redis.secret.name}}"
                key: "{{ .Values.redis.secret.key}}"
        {{- end }}
        {{- if .Values.rabbitmq.enabled }}
          - name: RABBITMQ_HOST
            value: "{{ .Values.rabbitmq.host}}"
          - name: RABBITMQ_PORT
            value: "{{ .Values.rabbitmq.port}}"
          - name: RABBITMQ_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.rabbitmq.secret.name}}"
                key: "{{ .Values.rabbitmq.secret.key}}"
        {{- end }}
        envFrom:
          - secretRef:
              name: {{ template "fullname" . }}
            resources:
{{ toYaml $worker.resources | indent 10 }}
---
{{ end }}
{{- end -}}
