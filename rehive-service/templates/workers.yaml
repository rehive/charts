{{- $chartName := include "rehive-service.name" . }}
{{- $gcloudCredentials := .Values.gcloudCredentials -}}
{{- $labels := include "rehive-service.labels" . }}
{{- $postgres := .Values.postgres -}}
{{- $rabbitmq := .Values.rabbitmq -}}
{{- $redis := .Values.redis -}}
{{- $releaseName := .Release.Name -}}
{{- $replicaCount := .Values.deployment.replicaCount -}}
{{- $repository := .Values.image.repository -}}
{{- $revision := .Release.Revision -}}
{{- $serviceName := include "rehive-service.fullname" . -}}
{{- $tag := .Values.image.tag -}}

{{- if .Values.workers.enabled -}}
{{- range $worker := .Values.workers.deployments -}}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ $worker.name }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ $chartName }}
      app.kubernetes.io/instance: {{ $releaseName }}
  replicas: {{ $worker.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 2
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ $chartName }}
        app.kubernetes.io/instance: {{ $releaseName }}
        {{ $labels | nindent 8 }}
        django-component: celery-worker
      annotations:
        helm/revision: "{{ $revision }}" # Hack to force restart on upgrade
    spec:
      containers:
      - name: {{ $worker.name }}
        image: {{ $repository }}:{{ $tag }}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: {{ $worker.internalPort }}
        command:
          {{ toYaml $worker.command | nindent 10 }}
        env:
        {{- if $gcloudCredentials.enabled }}
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: "/etc/credentials/{{ $gcloudCredentials.kubernetesSecret }}.json"
        {{- end }}
        {{- if $postgres.enabled }}
          - name: POSTGRES_HOST
            value: "{{ $postgres.host}}"
          - name: POSTGRES_PORT
            value: "{{ $postgres.port}}"
          - name: POSTGRES_USER
            value: "{{ $postgres.user }}"
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "{{ $postgres.secret.name}}"
                key: "{{ $postgres.secret.key}}"
        {{- end }}
        {{- if $redis.enabled }}
          - name: REDIS_HOST
            value: "{{ $redis.host}}"
          - name: REDIS_PORT
            value: "{{ $redis.port}}"
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "{{ $redis.secret.name}}"
                key: "{{ $redis.secret.key}}"
        {{- end }}
        {{- if $rabbitmq.enabled }}
          - name: RABBITMQ_HOST
            value: "{{ $rabbitmq.host}}"
          - name: RABBITMQ_PORT
            value: "{{ $rabbitmq.port}}"
          - name: RABBITMQ_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "{{ $rabbitmq.secret.name}}"
                key: "{{ $rabbitmq.secret.key}}"
        {{- end }}
        envFrom:
          - secretRef:
              name: {{ $serviceName }}
        resources:
          {{ toYaml $worker.resources | nindent 10 }}
        {{- if $gcloudCredentials.enabled }}
        volumeMounts:
          - name: {{ $gcloudCredentials.kubernetesSecret }}
            mountPath: /etc/credentials
            readOnly: true
        {{- end }}
      {{- if $gcloudCredentials.enabled }}
      volumes:
        - name: {{ $gcloudCredentials.kubernetesSecret }}
          secret:
            secretName: {{ $gcloudCredentials.kubernetesSecret }}
      {{- end }}
---
{{- end -}}
{{- end -}}
