# Default values for rehive-service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
deployment:
  command:
    - gunicorn
    - "config.wsgi:application"
  args:
    config: "file:config/gunicorn.py"
  replicaCount: 3
  resources: {}
  terminationGracePeriodSeconds: 60
  # Pre-stop hook to help prevent downtime when loadbalancer takes time to update to new pods.
  lifecycle:
    preStop:
      exec:
        command: ["/bin/sh", "-c", "echo 'Pre-stop sleep initiated' > /proc/1/fd/1 && sleep 10"]
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%

image:
  repository: rehive/example
  tag: latest
  pullPolicy: IfNotPresent

service:
  name: nginx
  type: ClusterIP
  externalPort: 80
  internalPort: 8000
  readinessProbe: {}
  livenessProbe: {}

envFromSecret:
  enabled: true
  name: ""

vendor:
  name: gcp
  # for azure install use
  # name: azure

ingress:
  enabled: true
  hosts:
    - example.services.rehive.io
  annotations:
    kubernetes.io/ingress.class: "nginx"
    kubernetes.io/tls-acme: "true"
  tls:
    - hosts:
      - example.services.rehive.io
      secretName: example-service-tls

postgres:
  enabled: false
  host: patroni-example-patroni.example-namespace.svc.cluster.local
  user: webapp
  db: postgres
  port: 5432
  secret:
    name: patroni-example-patroni
    key: password-admin

redis:
  enabled: false
  host: redis-example-redis.example-namespace.svc.cluster.local
  vhost: / 
  user: guest
  port: 6379
  secret:
    name: redis-example-redis
    key: rabbitmq-password

rabbitmq:
  enabled: false
  host: patroni-example-patroni.example-namespace.svc.cluster.local
  port: 5672
  secret:
    name: rabbitmq-example-rabbitmq-ha
    key: rabbitmq-password

gcloudCredentials:
  enabled: false
  kubernetesSecret: gcloud_credentials

workers:
  enabled: false
  deployments:
  - name: worker-receive
    internalPort: 8000
    replicaCount: 1
    command:
      - celery
      - worker
    args:
      app: config.celery
      loglevel: INFO
      concurrency: 1
      queue: general
    resources: {}

rbac:
  create: false
  rules:
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get

serviceAccount:
  create: true
  annotations: {}
